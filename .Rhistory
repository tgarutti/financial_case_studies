<<<<<<< Updated upstream
library(Hmisc)
library(vars)
library(stats)
library(PerformanceAnalytics)
library(bigmemory)
library(GRS.test)
library(nlme)
library(rms)
#New packages
library(LSTS)
source("read_data.R")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
install.packages("LSTS")
setwd("C:/Users/sonia singh/OneDrive/Documents/Code Repo_FCS/financial_case_studies")
=======
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
x <- 100
inflation <- countryData[,5]
for (i in 1:(floor(length(inflation)/(4*x))+1))
{
s = ((i-1)*4*x+1)
e = i*4*x
if (e > length(inflation))
{
inflation[s:length(inflation)] = inflation[s:length(inflation)] - mean(inflation[s:length(inflation)])
}
else
{
inflation[s:e] = inflation[s:e] - mean(inflation[s:e])
}
}
#Plot the level factor against inflation.
plot(-normLt/100, ylim = c(-0.02,0.03), col = "green")
lines(inflation)
##------------------------------------------------------------------##
##------------------------------------------------------------------##
cor(inflation, -normLt/100)
##------------------------------------------------------------------##
## Main function.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
x <- 100
inflation <- countryData[,5]
for (i in 1:(floor(length(inflation)/(4*x))+1))
{
s = ((i-1)*4*x+1)
e = i*4*x
if (e > length(inflation))
{
inflation[s:length(inflation)] = inflation[s:length(inflation)] - mean(inflation[s:length(inflation)])
}
else
{
inflation[s:e] = inflation[s:e] - mean(inflation[s:e])
}
}
inflation <- inflation - mean(inflation)
#Plot the level factor against inflation.
plot(-normLt/100, ylim = c(-0.02,0.03), col = "green")
lines(inflation)
##------------------------------------------------------------------##
##------------------------------------------------------------------##
cor(inflation, -normLt/100)
##------------------------------------------------------------------##
## Main function.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
# x <- 100
# inflation <- countryData[,5]
#
# for (i in 1:(floor(length(inflation)/(4*x))+1))
# {
#   s = ((i-1)*4*x+1)
#   e = i*4*x
#   if (e > length(inflation))
#   {
#     inflation[s:length(inflation)] = inflation[s:length(inflation)] - mean(inflation[s:length(inflation)])
#   }
#   else
#   {
#     inflation[s:e] = inflation[s:e] - mean(inflation[s:e])
#   }
# }
inflation <- inflation - mean(inflation)
#Plot the level factor against inflation.
plot(-normLt/100, ylim = c(-0.02,0.03), col = "green")
lines(inflation)
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##------------------------------------------------------------------##
## Main function.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
# x <- 100
# inflation <- countryData[,5]
#
# for (i in 1:(floor(length(inflation)/(4*x))+1))
# {
#   s = ((i-1)*4*x+1)
#   e = i*4*x
#   if (e > length(inflation))
#   {
#     inflation[s:length(inflation)] = inflation[s:length(inflation)] - mean(inflation[s:length(inflation)])
#   }
#   else
#   {
#     inflation[s:e] = inflation[s:e] - mean(inflation[s:e])
#   }
# }
inflation <- inflation - mean(inflation)
#Plot the level factor against inflation.
plot(-normLt/100, ylim = c(-0.02,0.03), col = "green")
lines(inflation)
##------------------------------------------------------------------##
##------------------------------------------------------------------##
cor(inflation, -normLt/100)
##------------------------------------------------------------------##
## Main function.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
inflation <- countryData[,5]
# x <- 100
#
# for (i in 1:(floor(length(inflation)/(4*x))+1))
# {
#   s = ((i-1)*4*x+1)
#   e = i*4*x
#   if (e > length(inflation))
#   {
#     inflation[s:length(inflation)] = inflation[s:length(inflation)] - mean(inflation[s:length(inflation)])
#   }
#   else
#   {
#     inflation[s:e] = inflation[s:e] - mean(inflation[s:e])
#   }
# }
inflation <- inflation - mean(inflation)
#Plot the level factor against inflation.
plot(-normLt/100, ylim = c(-0.02,0.03), col = "green")
lines(inflation)
##------------------------------------------------------------------##
##------------------------------------------------------------------##
cor(inflation, -normLt/100)
##------------------------------------------------------------------##
## Main function.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
inflation <- countryData[,5]
# x <- 100
#
# for (i in 1:(floor(length(inflation)/(4*x))+1))
# {
#   s = ((i-1)*4*x+1)
#   e = i*4*x
#   if (e > length(inflation))
#   {
#     inflation[s:length(inflation)] = inflation[s:length(inflation)] - mean(inflation[s:length(inflation)])
#   }
#   else
#   {
#     inflation[s:e] = inflation[s:e] - mean(inflation[s:e])
#   }
# }
inflation <- inflation - mean(inflation)
#Plot the level factor against inflation.
plot(-normLt/100, ylim = c(-0.02,0.03), col = "green")
lines(inflation)
##------------------------------------------------------------------##
##------------------------------------------------------------------##
cor(inflation, -normLt/100)
>>>>>>> Stashed changes
##------------------------------------------------------------------##
## Main function.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
inflation <- countryData[,5]
# x <- 100
#
# for (i in 1:(floor(length(inflation)/(4*x))+1))
# {
#   s = ((i-1)*4*x+1)
#   e = i*4*x
#   if (e > length(inflation))
#   {
#     inflation[s:length(inflation)] = inflation[s:length(inflation)] - mean(inflation[s:length(inflation)])
#   }
#   else
#   {
#     inflation[s:e] = inflation[s:e] - mean(inflation[s:e])
#   }
# }
inflation <- inflation - mean(inflation)
#Plot the level factor against inflation.
plot(-normLt/100, ylim = c(-0.02,0.03), col = "green")
lines(inflation)
##------------------------------------------------------------------##
##------------------------------------------------------------------##
install.packages("xlsx")
library(xlsx)
##------------------------------------------------------------------##
## Main function.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
inflation <- countryData[,5]
# x <- 100
#
# for (i in 1:(floor(length(inflation)/(4*x))+1))
# {
#   s = ((i-1)*4*x+1)
#   e = i*4*x
#   if (e > length(inflation))
#   {
#     inflation[s:length(inflation)] = inflation[s:length(inflation)] - mean(inflation[s:length(inflation)])
#   }
#   else
#   {
#     inflation[s:e] = inflation[s:e] - mean(inflation[s:e])
#   }
# }
inflation <- inflation - mean(inflation)
#Plot the level factor against inflation.
plot(-normLt/100, ylim = c(-0.02,0.03), col = "green")
lines(inflation)
##------------------------------------------------------------------##
##------------------------------------------------------------------##
<<<<<<< Updated upstream
## Reads and transforms the data.
##------------------------------------------------------------------##
source("edit_data.R")
uk_yieldCurve <- load("./data/united_kingdom_fromExcel.RData")
us_yieldCurve <- load("./data/united_states_fromExcel.RData")
us_data <- read.zoo("./data/USdata.csv", header = TRUE, sep = ",",format="%m/%d/%Y",index.column = 1)
uk_data <- read.zoo("./data/UKdata.csv", header = TRUE, sep = ",",format="%m/%d/%Y",index.column = 1)
pcOrtec <- read.zoo("./data/PC_ortec.csv", header = TRUE, sep = ",",format="%m/%d/%Y",index.column = 1)
us_yield_ortec <- read.zoo("./data/us_yield_ortec.csv", header = TRUE, sep = ",",format="%m/%d/%Y",index.column = 1)
#us_yieldCurve <- interpolate(united_states)[,c(1,2,4,8,10,11,12,13,14,15,16,17)]
us_yieldCurve <- interpolate(united_states)[,c(1,2,4,8,10,11,12,14,17)]
#us_yieldCurve <- interpolate(united_states)[,c(1,2,4,8,10,12)]
us_yield_ortec <- interpolate(us_yield_ortec)[,c(1,2,4,8,10,12,14,17)]
us_yield_ortec <- window(us_yield_ortec, start = "1985-03-1", end = "2018-03-01")
#uk_yieldCurve <- interpolate(united_kingdom)[,c(1,2,4,8,10,11,12,13,14,15,16,17)]
uk_yieldCurve <- interpolate(united_kingdom)[,c(1,2,4,8,10,12,13,14,15,16,17)]
us_quarterly <- as.zoo(monthlyToQuarterly(us_yieldCurve, c(1990,1)))
colnames(us_quarterly) = colnames(us_yieldCurve)
index(us_quarterly) = index(us_data)[62:(62+112)]
uk_quarterly <- as.zoo(monthlyToQuarterly(window(uk_yieldCurve, start = "1995-01-01", end = "2018-05-01"), c(1995,1)))
colnames(uk_quarterly) = colnames(uk_yieldCurve)
index(uk_quarterly) = index(uk_data)[1:93]
us_data <- window(us_data, start = "1985-03-1", end = "2018-03-01")
uk_data <- window(uk_data, start = "1995-03-1", end = "2018-03-01")
rm(united_kingdom, united_states)
##------------------------------------------------------------------##
##------------------------------------------------------------------##
View(countryData)
lm()
?lm()
inf<- inflation-Lt
output_gap<- countryData[,3]
model<-lm(St~inf+output_gap)
a <- coef(model)[1]
print(a)
b<- coef(model)[2]
print(b)
c<-coef(model)[3]
print(c)
inf<- inflation - Lt
output_gap<-countryData[,4]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
summary(model)$r.squared
summary(model)
inf<- inflation
output_gap<-countryData[,4]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
summary(model)
fitted.values
fitted.values(model)
inf<- inflation
output_gap<-countryData[,4]
data_St = data.frame(St, inf, output_gap)
model<- lm(-St~inf+output_gap,data=data_St)
inf<- inflation
output_gap<-countryData[,4]
data_St = data.frame(St, inf, output_gap)
model<- lm(-St~inf+output_gap,data=data_St)
summary(model)
inf<- inflation
output_gap<-countryData[,4]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model), ylim(-0.05,0.05, col="blue"))
lines(St)
plot(fitted.values(model),col="blue"))
lines(St)
plot(fitted.values(model),ylim(-0.05,0.05) col="blue")
lines(St)
plot(fitted.values(model),ylim(-0.05,0.05), col="blue")
lines(St
plot(fitted.values(model),ylim(-0.05,0.05), col="blue")
lines(St)
plot(fitted.values(model),ylim=(-0.05,0.05), col="blue")
lines(St)
plot(fitted.values(model),ylim=c(-0.05,0.05), col="blue")
lines(St)
plot(-normLt/100, ylim = c(-0.02,0.03), col = "green")
lines(inflation)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
inf<- -inflation
output_gap<-countryData[,4]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
inf<- inflation
output_gap<-countryData[,4]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
inf<- inflation - Lt
output_gap<-countryData[,4]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
inf<- inflation
output_gap<-countryData[,4]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
inf<- inflation
output<-countryData[,4]
output_gap<- output-mean(output)
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
summary(model)
inf<- inflation
output<-countryData[,4]
#output_gap<- output-mean(output)
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
inf<- inflation
output<-countryData[,4]
#output_gap<- output-mean(output)
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
inf<- inflation
output<-countryData[,3]
#output_gap<- output-mean(output)
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
inf<- inflation
output<-countryData[,3]
#output_gap<- output-mean(output)
data_St = data.frame(St, inf, output)
model<- lm(St~inf+output,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
#OLS regression of slope factor on inflation and output gap
inf<- inflation
output<-countryData[,3]
output_gap<- output-mean(output)
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
#OLS regression of slope factor on inflation and output gap
inf<- inflation - Lt
output_gap<-countryData[,3]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
summary(model)
#OLS regression of slope factor on inflation and output gap
inf<- inflation - Lt
output<-countryData[,3]
output_gap<- output-mean(output)
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
summary(model)
#OLS regression of slope factor on inflation and output gap
inf<- inflation - Lt
output_gap<-countryData[,3]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
#OLS regression of slope factor on inflation and output gap
inf<- inflation
output_gap<-countryData[,3]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
summary(model)
#OLS regression of slope factor on inflation and output gap
inf<- inflation  -Lt
output_gap<-countryData[,3]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
summary(model)
## Calculate and write descriptive statistics.
descriptives <- basic_descriptives(us_yield_ortec)
setwd("C:/Users/sonia singh/OneDrive/Documents/Code Repo_FCS/financial_case_studies")
write_table(descriptives, "descriptivesYieldsOrtec.csv")
install.packages("rpg")
View(desciptives)
View(descriptives)
descriptives <- basic_descriptives(us_yield_ortec)
write_table(descriptives, "descriptivesYieldsOrtec.csv")
?write.table
## Calculate and write descriptive statistics.
descriptives <- basic_descriptives(us_yield_ortec)
coredata
descriptives <- basic_descriptives(us_yield_ortec)
write_table(descriptives, "descriptivesYieldsOrtec.csv")
descriptives <- basic_descriptives(us_yield_ortec)
write_table(descriptives, "descriptivesYieldsOrtec.csv")
?basic_descriptives
devtools
install.packages("devtoold")
install.packages("devtools")
descriptives <- basic_descriptives(us_yield_ortec)
write_table(descriptives, "descriptivesYieldsOrtec.csv")
descriptives <- basic_descriptives(us_yield_ortec)
write_table(descriptives, "descriptivesYieldsOrtec.csv")
View(coredata)
setwd("C:/Users/sonia singh/OneDrive/Documents/Code Repo_FCS/financial_case_studies")
## Calculate and write descriptive statistics.
descriptives <- basic_descriptives(us_yield_ortec)
View(basic_descriptives)
=======
##------------------------------------------------------------------##
## Main function.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
inflation <- countryData[,5]
# x <- 100
#
# for (i in 1:(floor(length(inflation)/(4*x))+1))
# {
#   s = ((i-1)*4*x+1)
#   e = i*4*x
#   if (e > length(inflation))
#   {
#     inflation[s:length(inflation)] = inflation[s:length(inflation)] - mean(inflation[s:length(inflation)])
#   }
#   else
#   {
#     inflation[s:e] = inflation[s:e] - mean(inflation[s:e])
#   }
# }
inflation <- inflation - mean(inflation)
#Plot the level factor against inflation.
plot(-normLt/100, ylim = c(-0.02,0.03), col = "green")
lines(inflation)
## Calculate and write descriptive statistics.
descriptives <- basic_descriptives(us_yield_ortec)
write_table(descriptives, "descriptivesYieldsOrtec.csv")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##------------------------------------------------------------------##
## Main function.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
inflation <- countryData[,5]
# x <- 100
#
# for (i in 1:(floor(length(inflation)/(4*x))+1))
# {
#   s = ((i-1)*4*x+1)
#   e = i*4*x
#   if (e > length(inflation))
#   {
#     inflation[s:length(inflation)] = inflation[s:length(inflation)] - mean(inflation[s:length(inflation)])
#   }
#   else
#   {
#     inflation[s:e] = inflation[s:e] - mean(inflation[s:e])
#   }
# }
inflation <- inflation - mean(inflation)
#Plot the level factor against inflation.
plot(-normLt/100, ylim = c(-0.02,0.03), col = "green")
lines(inflation)
## Calculate and write descriptive statistics.
descriptives <- basic_descriptives(us_yield_ortec)
write_table(descriptives, "descriptivesYieldsOrtec.csv")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
>>>>>>> Stashed changes
##------------------------------------------------------------------##
##Functions for reading and editing data.
##------------------------------------------------------------------##
interpData <- function(data_1, x)
{
counter <- t(as.matrix(1:length(data_1[,1])))
result <- apply(counter, 2, lin_int <- function(i)
{
y <- coredata(as.array((data_1[i,])))
return(t(spline(x = x, y = y, n = 40, xmin = 0.25, xmax = 10)$y))
})
return(result)
}
interpolate <- function(data_1)
{
maturities <- strtoi(str_sub(colnames(data_1), 2, -1))/12
data_interp <- t(interpData(data_1, maturities))
col_names <- c(3, 6, 9, 12, 15, 18, 21, 24, 30, 36, 48, 60, 72, 84, 96, 108, 120)
data_interp <- data_interp[, c(1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 16, 20, 24, 28, 32, 36, 40)]
colnames(data_interp) <- col_names
data_interp <- as.zoo(data_interp)
index(data_interp) <- index(data_1)
return(data_interp)
}
monthlyToQuarterly <- function(data1, start_date)
{
quarterly_data <- apply(data1, 2, FUN = f <- function(d)
{
m <- ts(d, start = start_date, frequency = 12)
q <- aggregate(m, nfrequency = 4, mean)
return(q)
})
return(quarterly_data)
}
basic_descriptives <- function(data1)
{
descriptives <- apply(data1, 2, FUN = f <- function(c)
{
c <- coredata(c)
avg <- mean(c)
std <- sqrt(var(c))
mx <- max(c)
mn <- min(c)
autocorrelations <- acf(c, lag.max = 20)$acf[c(2,3,4,11)]
stats <- c(avg, std, mx, mn, autocorrelations)
return(stats)
})
rownames(descriptives) <- c("Mean", "Std. Dev.", "Maximum", "Minimum", "ar1", "ar2", "ar3", "ar10")
return(t(descriptives))
}
write_table <- function(data1, file_name)
{
write.csv(data1, file = file_name)
}
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##------------------------------------------------------------------##
## Main function.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
inflation <- countryData[,5]
# x <- 100
#
# for (i in 1:(floor(length(inflation)/(4*x))+1))
# {
#   s = ((i-1)*4*x+1)
#   e = i*4*x
#   if (e > length(inflation))
#   {
#     inflation[s:length(inflation)] = inflation[s:length(inflation)] - mean(inflation[s:length(inflation)])
#   }
#   else
#   {
#     inflation[s:e] = inflation[s:e] - mean(inflation[s:e])
#   }
# }
inflation <- inflation - mean(inflation)
#Plot the level factor against inflation.
plot(-normLt/100, ylim = c(-0.02,0.03), col = "green")
lines(inflation)
<<<<<<< Updated upstream
#OLS regression of slope factor on inflation and output gap
inf<- inflation  -Lt
output_gap<-countryData[,3]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
## Calculate and write descriptive statistics.
descriptives <- basic_descriptives(us_yield_ortec)
write_table(descriptives, "descriptivesYieldsOrtec.csv")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
View(basic_descriptives)
View(write_table)
data1
#OLS regression of slope factor on inflation and output gap
inf<- inflation  -normLt
output_gap<-countryData[,3]
data_St = data.frame(normSt, inf, output_gap)
model<- lm(normSt~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(nomrmSt)
#OLS regression of slope factor on inflation and output gap
inf<- inflation  -normLt
output_gap<-countryData[,3]
data_St = data.frame(normSt, inf, output_gap)
model<- lm(normSt~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(normSt)
#OLS regression of slope factor on inflation and output gap
inf<- inflation  -Lt
output_gap<-countryData[,3]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
#OLS regression of slope factor on inflation and output gap
inf<- inflation  -Lt
output_gap<-countryData[,3]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(normSt)
#OLS regression of slope factor on inflation and output gap
inf<- inflation  -Lt
output_gap<-countryData[,3]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
#OLS regression of slope factor on inflation and output gap
inf<- inflation  -Lt
output_gap<-countryData[,3]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(-fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
#OLS regression of slope factor on inflation and output gap
inf<- inflation  -Lt
output_gap<-countryData[,3]
data_St = data.frame(St, inf, output_gap)
model<- lm(St~inf+output_gap,data=data_St)
plot(fitted.values(model),ylim=c(-0.05,0.05), type="l", col="blue")
lines(St)
View(yieldCurve)
View(us_yield_ortec)
##------------------------------------------------------------------##
##Functions for reading and editing data.
##------------------------------------------------------------------##
interpData <- function(data_1, x)
{
counter <- t(as.matrix(1:length(data_1[,1])))
result <- apply(counter, 2, lin_int <- function(i)
{
y <- coredata(as.array((data_1[i,])))
return(t(spline(x = x, y = y, n = 40, xmin = 0.25, xmax = 10)$y))
})
return(result)
}
interpolate <- function(data_1)
{
maturities <- strtoi(str_sub(colnames(data_1), 2, -1))/12
data_interp <- t(interpData(data_1, maturities))
col_names <- c(3, 6, 9, 12, 15, 18, 21, 24, 30, 36, 48, 60, 72, 84, 96, 108, 120)
data_interp <- data_interp[, c(1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 16, 20, 24, 28, 32, 36, 40)]
colnames(data_interp) <- col_names
data_interp <- as.zoo(data_interp)
index(data_interp) <- index(data_1)
return(data_interp)
}
monthlyToQuarterly <- function(data1, start_date)
{
quarterly_data <- apply(data1, 2, FUN = f <- function(d)
{
m <- ts(d, start = start_date, frequency = 12)
q <- aggregate(m, nfrequency = 4, mean)
return(q)
})
return(quarterly_data)
}
basic_descriptives <- function(data1)
{
descriptives <- apply(data1, 2, FUN = f <- function(c)
{
c <- coredata(c)
avg <- mean(c)
std <- sqrt(var(c))
mx <- max(c)
mn <- min(c)
autocorrelations <- acf(c, lag.max = 20)$acf[c(2,3,4,11)]
stats <- c(avg, std, mx, mn, autocorrelations)
return(stats)
})
rownames(descriptives) <- c("Mean", "Std. Dev.", "Maximum", "Minimum", "ar1", "ar2", "ar3", "ar10")
return(t(descriptives))
}
write_table <- function(data1, us_yield_ortec)
{
write.csv(data1, file = us_yield_ortec)
}
##------------------------------------------------------------------##
##------------------------------------------------------------------##
=======
>>>>>>> Stashed changes
## Calculate and write descriptive statistics.
descriptives <- basic_descriptives(us_yield_ortec)
write_table(descriptives, "descriptivesYieldsOrtec.csv")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
View(write_table)
View(basic_descriptives)
View(descriptives)
cor(pca,countryData)
View(pca)
cor(pca$x, countryData)
cor(pcOrtec,countryData)
View(pcOrtec)
View(countryData)
cor(pcOrtec, countryData, start="1985-03-01", end="2018-03-01")
corr<- cor(pca$x, countryData)
corr
