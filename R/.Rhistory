install.packages("zoo")
install.packages("xts")
clc
clear
install.packages("rugarch")
?rugarch
??rugarch
help(rugarch)
??rugarch
install.packages("xts")
install.packages("xts")
install.packages(xts)
install.packages("xts")
install.packages("xts")
??xts
install.packages("dplyr")
install.packages("xts")
13+25
t <-lapply(1:1000, function(t) (rt(1000,4)))
k <-seq(from=0.99,to=0.6,by= -0.001)
try <- lapply(k, FUN= function(k){
sapply(t,FUN=function(t) {
simu_fit<- fevd(t,type="GP",threshold= quantile(t,k))
coef <- simu_fit$results$par
xi <-coef[2]
beta <-coef[1]
zq_hat <- quantile(t,(k-0.001)) + (beta/xi)*  ( (0.01/(1-k))^(-xi) -1)
# zq_sample <-quantile(t,0.99)
zq <-qt(0.99,4)
out <-union(zq,zq_hat)
#mse <-mse(out[,1],mse[,2])
return(out)
} )
} )
library(Metrics)
mse <- sapply(try,FUN=function(try) {
try<-t(as.data.frame(try))
mse(try[,1],try[,2])
})
plot(mse)
library(Metrics)
mse <- sapply(try,FUN=function(try) {
try<-t(as.data.frame(try))
mse(try[,1],try[,2])
})
?plot.xy
install.packages("Metrics")
?plot.xy
library(Metrics)
?plot
matrix(rexp(200), 10)
matrix(rexp(24), 4)
abcd <- matrix(as.int(rexp(24)), 4)
abcd <- matrix(sample.int(100, 24), 4)
View(abcd)
abcd <- matrix(sample.int(10, 24), 4)
View(abcd)
abcd <- matrix(sample.int(10, 24, replace = TRUE), 4)
abcd <- matrix(sample.int(10, 24, replace = TRUE), 4)
counter <- as.matrix(1:4)
rows_mat <- apply(counter, 1, fun = function(i)
{
print(abcd[i,])
})
abcd <- matrix(sample.int(10, 24, replace = TRUE), 4)
counter <- as.matrix(1:4)
rows_mat <- apply(counter, 1, FUN  = function(i)
{
print(abcd[i,])
})
View(rows_mat)
View(abcd)
abcd <- matrix(sample.int(10, 24, replace = TRUE), 4)
counter <- as.matrix(1:4)
rows_mat <- apply(counter, 1, FUN  = function(i)
{
print(abcd[,i])
})
View(abcd)
abcd <- matrix(sample.int(10, 16, replace = TRUE), 4)
counter <- as.matrix(1:4)
rows_mat <- apply(counter, 1, FUN  = function(i)
{
print(abcd[,i])
})
abcd <- matrix(sample.int(10, 16, replace = TRUE), 4)
counter <- as.matrix(1:4)
rows_mat <- apply(counter, 1, FUN  = function(i)
{
print(abcd[i,])
})
View(abcd)
View(rows_mat)
abcd <- matrix(sample.int(10, 16, replace = TRUE), 4)
counter <- as.matrix(1:4)
rows_mat <- apply(counter, 1, FUN  = function(i)
{
return(abcd[i,])
})
View(abcd)
View(abcd)
View(rows_mat)
View(rows_mat)
library("rJava", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(xlsx)
library("rJava", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
source('~/.active-rstudio-document')
library(xlsx)
install.packages("xlsx")
library(xlsx)
require(xlsReadWrite)
install.packages("xlsxReadWrite")
source('~/Documents/Repositories/financial_case_studies/R/main.R', echo=TRUE)
setwd
setwd("~/Documents/Repositories/financial_case_studies/")
##------------------------------------------------------------------##
## Main function
## -------------
##
##------------------------------------------------------------------##
source("source_file.R")
setwd("~/Documents/Repositories/financial_case_studies/R")
##------------------------------------------------------------------##
## Main function
## -------------
##
##------------------------------------------------------------------##
source("source_file.R")
##------------------------------------------------------------------##
## Main function
## -------------
##
##------------------------------------------------------------------##
source("source_file.R")
PCs <- prcomp(us_yield_ortec)$x
##------------------------------------------------------------------##
## Main function
## -------------
##
##------------------------------------------------------------------##
source("source_file.R")
PCs <- prcomp(us_yield_ortec)$x
PC_norm <- normalize(PCs)
View(PC_norm)
