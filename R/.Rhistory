index(normCt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
inflation <- countryData[,5]
inflation <- inflation - mean(inflation)
## Calculate and write descriptive statistics.
#source("descriptives.R")
## Plots.
source("plot.R")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##------------------------------------------------------------------##
## Main function.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Normalize data
normData <- as.zoo(normalize(countryData))
index(normData) <- index(countryData)
normPCOrtec <- as.zoo(normalize(pcOrtec))
index(normPCOrtec) <- index(countryData)
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
Ct <- pca$x[,3]
normCt <- as.zoo(Ct - mean(Ct))/sqrt(var(Ct))
index(normCt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
inflation <- countryData[,5]
inflation <- inflation - mean(inflation)
## Calculate and write descriptive statistics.
#source("descriptives.R")
## Plots.
source("plot.R")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
cor(inflation, -normLt/100)
##------------------------------------------------------------------##
## Main function.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Normalize data
normData <- as.zoo(normalize(countryData))
index(normData) <- index(countryData)
normPCOrtec <- as.zoo(normalize(pcOrtec))
index(normPCOrtec) <- index(countryData)
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
Ct <- pca$x[,3]
normCt <- as.zoo(Ct - mean(Ct))/sqrt(var(Ct))
index(normCt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
inflation <- countryData[,5]
inflation <- inflation - mean(inflation)
## Calculate and write descriptive statistics.
#source("descriptives.R")
## Plots.
source("plot.R")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##------------------------------------------------------------------##
## Main function.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Normalize data
normData <- as.zoo(normalize(countryData))
index(normData) <- index(countryData)
normPCOrtec <- as.zoo(normalize(pcOrtec))
index(normPCOrtec) <- index(countryData)
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
Ct <- pca$x[,3]
normCt <- as.zoo(Ct - mean(Ct))/sqrt(var(Ct))
index(normCt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
inflation <- countryData[,5]
inflation <- inflation - mean(inflation)
## Calculate and write descriptive statistics.
#source("descriptives.R")
## Plots.
source("plot.R")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##------------------------------------------------------------------##
## Main function.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Normalize data
normData <- as.zoo(normalize(countryData))
index(normData) <- index(countryData)
normPCOrtec <- as.zoo(normalize(pcOrtec))
index(normPCOrtec) <- index(countryData)
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
Ct <- pca$x[,3]
normCt <- as.zoo(Ct - mean(Ct))/sqrt(var(Ct))
index(normCt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
inflation <- countryData[,5]
inflation <- inflation - mean(inflation)
## Calculate and write descriptive statistics.
#source("descriptives.R")
## Plots.
source("plot.R")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##Source file.
##------------------------------------------------------------------##
library(xts)
library(zoo)
library(SpatialExtremes)
library(rugarch)
library(extRemes)
library(stringr)
library(Hmisc)
library(vars)
library(stats)
library(PerformanceAnalytics)
library(bigmemory)
library(GRS.test)
library(nlme)
library(rms)
#New packages
library(LSTS)
source("read_data.R")
source("Sims/")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
source("edit_data.R")
##------------------------------------------------------------------##
##Functions for reading and editing data.
##------------------------------------------------------------------##
#Function: uses spline to interpolate the input data (length x)
interpData <- function(data_1, x)
{
counter <- t(as.matrix(1:length(data_1[,1])))
result <- apply(counter, 2, lin_int <- function(i)
{
y <- coredata(as.array((data_1[i,])))
return(t(spline(x = x, y = y, n = 40, xmin = 0.25, xmax = 10)$y))
})
return(result)
}
#Function: runs interpData for a set length x and gives index and column names to the interpolated data
interpolate <- function(data_1)
{
maturities <- strtoi(str_sub(colnames(data_1), 2, -1))/12
data_interp <- t(interpData(data_1, maturities))
col_names <- c(3, 6, 9, 12, 15, 18, 21, 24, 30, 36, 48, 60, 72, 84, 96, 108, 120)
data_interp <- data_interp[, c(1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 16, 20, 24, 28, 32, 36, 40)]
colnames(data_interp) <- col_names
data_interp <- as.zoo(data_interp)
index(data_interp) <- index(data_1)
return(data_interp)
}
#Function: changes quarterly data to monthly data by taking the average of the 3 previous months
monthlyToQuarterly <- function(data1, start_date)
{
quarterly_data <- apply(data1, 2, FUN = f <- function(d)
{
m <- ts(d, start = start_date, frequency = 12)
q <- aggregate(m, nfrequency = 4, mean)
return(q)
})
return(quarterly_data)
}
#Function: writes table data1 from R to csv
write_table <- function(data1, file_name)
{
write.csv(data1, file = file_name)
}
normalize <- function(data1)
{
norm_data <- apply(data1, 2, FUN = f <- function(c)
{
return((c - mean(c))/sqrt(var(c)))
})
}
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##------------------------------------------------------------------##
## Main function.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Normalize data
normData <- as.zoo(normalize(countryData))
index(normData) <- index(countryData)
normPCOrtec <- as.zoo(normalize(pcOrtec))
index(normPCOrtec) <- index(countryData)
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
Ct <- pca$x[,3]
normCt <- as.zoo(Ct - mean(Ct))/sqrt(var(Ct))
index(normCt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset, using a different mean every x years.
inflation <- countryData[,5]
inflation <- inflation - mean(inflation)
## Calculate and write descriptive statistics.
#source("descriptives.R")
## Plots.
source("plot.R")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##Source file.
##------------------------------------------------------------------##
library(xts)
library(zoo)
library(SpatialExtremes)
library(rugarch)
library(extRemes)
library(stringr)
library(Hmisc)
library(vars)
library(stats)
library(PerformanceAnalytics)
library(bigmemory)
library(GRS.test)
library(nlme)
library(rms)
#New packages
library(LSTS)
source("read_data.R")
source("Sims/")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##Source file.
##------------------------------------------------------------------##
library(xts)
library(zoo)
library(SpatialExtremes)
library(rugarch)
library(extRemes)
library(stringr)
library(Hmisc)
library(vars)
library(stats)
library(PerformanceAnalytics)
library(bigmemory)
library(GRS.test)
library(nlme)
library(rms)
#New packages
library(LSTS)
source("read_data.R")
source("Sims/gensys.R")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##Source file.
##------------------------------------------------------------------##
library(xts)
library(zoo)
library(SpatialExtremes)
library(rugarch)
library(extRemes)
library(stringr)
library(Hmisc)
library(vars)
library(stats)
library(PerformanceAnalytics)
library(bigmemory)
library(GRS.test)
library(nlme)
library(rms)
#New packages
library(LSTS)
source("read_data.R")
source("Sims/gensys.R")
source("Sims/qzdiv.R")
source("Sims/qzswitch.R")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##------------------------------------------------------------------##
## Main function.
## ---
## Perform principal component analysis on yield curve data
##------------------------------------------------------------------##
source("source_file.R")
##------------------------------------------------------------------##
## Main function
## -------------
## Perform principal component analysis on the US yield curve data.
## Compare the first principal components on the macroeconomic US
## data: inflation, output gap and unemployment. Displays the
## resulting relations in two plots.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Normalize data
normData <- as.zoo(normalize(countryData))
index(normData) <- index(countryData)
normPCOrtec <- as.zoo(normalize(pcOrtec))
index(normPCOrtec) <- index(countryData)
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
Ct <- pca$x[,3]
normCt <- as.zoo(Ct - mean(Ct))/sqrt(var(Ct))
index(normCt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset,
#using a different mean every x years.
inflation <- countryData[,5]
inflation <- inflation - mean(inflation)
## Calculate and write descriptive statistics.
#source("descriptives.R")
## Plots.
source("plot.R")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
source("source_file.R")
setwd("~/Documents/Repositories/financial_case_studies/R")
##------------------------------------------------------------------##
## Main function
## -------------
## Perform principal component analysis on the US yield curve data.
## Compare the first principal components on the macroeconomic US
## data: inflation, output gap and unemployment. Displays the
## resulting relations in two plots.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Normalize data
normData <- as.zoo(normalize(countryData))
index(normData) <- index(countryData)
normPCOrtec <- as.zoo(normalize(pcOrtec))
index(normPCOrtec) <- index(countryData)
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
Ct <- pca$x[,3]
normCt <- as.zoo(Ct - mean(Ct))/sqrt(var(Ct))
index(normCt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset,
#using a different mean every x years.
inflation <- countryData[,5]
inflation <- inflation - mean(inflation)
## Calculate and write descriptive statistics.
#source("descriptives.R")
## Plots.
source("plot.R")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
##------------------------------------------------------------------##
## Main function
## -------------
## Perform principal component analysis on the US yield curve data.
## Compare the first principal components on the macroeconomic US
## data: inflation, output gap and unemployment. Displays the
## resulting relations in two plots.
##------------------------------------------------------------------##
source("source_file.R")
##------------------------------------------------------------------##
## Main function
## -------------
## Perform principal component analysis on the US yield curve data.
## Compare the first principal components on the macroeconomic US
## data: inflation, output gap and unemployment. Displays the
## resulting relations in two plots.
##------------------------------------------------------------------##
source("source_file.R")
##------------------------------------------------------------------##
## Main function
## -------------
##
##------------------------------------------------------------------##
source("source_file.R")
write_table(us_yield_ortec, "yieldCurveOrtec_interpolated")
View(us_yield_ortec)
write_table(coredata(us_yield_ortec), "yieldCurveOrtec_interpolated")
write_table(coredata(us_yield_ortec), "yieldCurveOrtec_interpolated")
View(coredata(us_yield_ortec))
write_table(as.matrix(coredata(us_yield_ortec)), "yieldCurveOrtec_interpolated")
printStuff <- coredata(us_yield_ortec)
pS <- coredata(us_yield_ortec)
pr <- coredata(us_yield_ortec)
colnames(pr) <- NULL
rownames(pr) <- NULL
View(pr)
pr <- as.data.frame(pr)
View(pr)
write_table(pr, "yieldCurveOrtec_interpolated")
write_table(pca$x, "PC_yieldCurve")
##------------------------------------------------------------------##
## Main function
## -------------
## Perform principal component analysis on the US yield curve data.
## Compare the first principal components on the macroeconomic US
## data: inflation, output gap and unemployment. Displays the
## resulting relations in two plots.
##------------------------------------------------------------------##
source("source_file.R")
## PCA and analysis of factors
#Select data needed, either US or UK.
yieldCurve <- us_yield_ortec
countryData <- us_data
#Normalize data
normData <- as.zoo(normalize(countryData))
index(normData) <- index(countryData)
normPCOrtec <- as.zoo(normalize(pcOrtec))
index(normPCOrtec) <- index(countryData)
#Perform pca on the yield curve data.
pca <- prcomp(yieldCurve)
#Select the first principal component as the level factor.
Lt <- pca$x[,1]
normLt <- as.zoo((Lt - mean(Lt))/sqrt(var(Lt)))
index(normLt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
St <- pca$x[,2]
normSt <- as.zoo(St - mean(St))/sqrt(var(St))
index(normSt) <- index(yieldCurve)
#Select the second principal component as the slope factor.
Ct <- pca$x[,3]
normCt <- as.zoo(Ct - mean(Ct))/sqrt(var(Ct))
index(normCt) <- index(yieldCurve)
#Select PCE core inflation from the dataset. Demean the dataset,
#using a different mean every x years.
inflation <- countryData[,5]
inflation <- inflation - mean(inflation)
## Calculate and write descriptive statistics.
#source("descriptives.R")
## Plots.
source("plot.R")
##------------------------------------------------------------------##
##------------------------------------------------------------------##
write_table(pca$x, "PC_yieldCurve")
